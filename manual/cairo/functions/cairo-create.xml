<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.cairo-create">
   <refnamediv>
    <refname>cairo_create</refname>
    <refpurpose>Create new drawing context resource</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource cairo_context</type><methodname>cairo_create</methodname>
      <methodparam><type>resource</type><parameter>surface</parameter></methodparam>
     </methodsynopsis>
   <para>
    Creates a new <type>cairo_context</type> resource with all graphics state 
    parameters set to default values and with <parameter>surface</parameter> 
    as a target surface. The target surface should be constructed with a 
    backend-specific function such as <function>cairo_image_surface_create</function> 
    (or any other <literal>cairo_&lt;backend&gt;_surface_create</literal> variant).
   </para>
   <para>
    This function references <parameter>surface</parameter>, so you can immediately
    call <function>cairo_surface_destroy</function> on it if you don't need to
    maintain a separate reference to it.
   </para>
   
   <variablelist role='params'>
<varlistentry><term><parameter>target</parameter>:</term>
<listitem><simpara> target surface for the context
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>:</term><listitem><simpara> a newly allocated <type>cairo_context</type> with a reference
 count of 1. The initial reference count should be released
 with <function>cairo_destroy</function> when you are done using the <type>cairo_context</type>.
 This function never returns NULL. If memory cannot be
 allocated, a special <type>cairo_resource</type> resource will be returned on
 which <function>cairo_status</function> returns <literal>CAIRO_STATUS_NO_MEMORY</literal>.
 You can use this object normally, but no drawing will be done.
</simpara></listitem></varlistentry>
</variablelist>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
